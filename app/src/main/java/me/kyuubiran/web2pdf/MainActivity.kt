package me.kyuubiran.web2pdf

import android.content.Intent
import android.os.Bundle
import android.util.Log
import android.widget.Toast
import androidx.activity.ComponentActivity
import androidx.activity.compose.setContent
import androidx.activity.enableEdgeToEdge
import androidx.compose.foundation.layout.Box
import androidx.compose.foundation.layout.Row
import androidx.compose.foundation.layout.Spacer
import androidx.compose.foundation.layout.fillMaxSize
import androidx.compose.foundation.layout.padding
import androidx.compose.foundation.layout.width
import androidx.compose.material3.Button
import androidx.compose.material3.ExperimentalMaterial3Api
import androidx.compose.material3.Scaffold
import androidx.compose.material3.Text
import androidx.compose.material3.TopAppBar
import androidx.compose.ui.Alignment
import androidx.compose.ui.Modifier
import androidx.compose.ui.unit.dp
import androidx.core.content.FileProvider
import me.kyuubiran.web2pdf.ui.theme.Web2pdfTheme
import java.io.File

class MainActivity : ComponentActivity() {

    private val cvt by lazy {
        Web2PdfConverter(
            this.createConfigurationContext(
                resources.configuration.apply {
                    // set this can fix font size problem
                    fontScale = 1f
                })
        ).apply {
            delayBeforeConvert = 500L
            enableJs = true
            onPageLoadFinished = IOnPageLoadFinishedCallback { wv, url ->
                Log.d("Web2Pdf", "onPageLoadFinished: $url")
                if (url == "file:///android_asset/test.html") {
                    wv.evaluateJavascript("document.querySelector('body > section:nth-child(2) > div:nth-child(4) > label').textContent = 'Hooked checkbox'", null)
                }
            }
        }
    }

    private fun getFile(name: String): File {
        val file = File(getExternalFilesDir(null), name)
        if (file.exists()) {
            file.delete()
        }
        file.createNewFile()
        return file
    }

    private fun openPdf(file: File) {
        val intent = Intent(Intent.ACTION_VIEW)
        intent.setDataAndType(FileProvider.getUriForFile(this, "web2pdf.provider", file), "application/pdf")
        intent.addFlags(Intent.FLAG_ACTIVITY_NO_HISTORY)
        startActivity(intent)
    }

    private val callback = IWeb2PdfResultCallback { success, file, exception ->
        Toast.makeText(this, "Web2pdf convert result: ${if (success) "success" else "fail "}" + if (!success) exception?.message else "", Toast.LENGTH_SHORT).show()
        if (success) {
            println("Success: ${file?.path}")
            openPdf(file!!)
        } else {
            println("Failed: ${exception?.stackTraceToString()}")
        }
    }


    val htmlText = """
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Test</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f0f0f0;
            color: #333;
            padding: 20px;
        }
        h1 {
            color: #007BFF;
        }
        p {
            font-size: 16px;
            line-height: 1.5;
        }
        .highlight {
            background-color: #007BFF;
            color: white;
            padding: 5px;
            border-radius: 3px;
        }
        .container {
            max-width: 800px;
            margin: 0 auto;
            padding: 20px;
            background-color: white;
            border-radius: 5px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
        }
        .footer {
            text-align: center;
            margin-top: 20px;
            font-size: 14px;
            color: #777;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>Welcome to Web2Pdf Converter</h1>
        <p>This is a simple HTML page to test the Web2Pdf converter.</p>
        <p>Here is a <span class="highlight">highlighted text</span> for demonstration.</p>
        <p>Feel free to modify this content and see how it converts to PDF!</p>
        <p class="footer">Generated by Web2Pdf Converter</p>
    </div>
    <script>
        // Example JavaScript code
        document.addEventListener('DOMContentLoaded', function() {
            console.log('DOM fully loaded and parsed');
        });
        function showAlert() {
            alert('This is a JavaScript alert!');
        }
        showAlert();
    </script>
</body>
</html>
    """.trimIndent()

    @OptIn(ExperimentalMaterial3Api::class)
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        enableEdgeToEdge()
        setContent {
            Web2pdfTheme {
                Scaffold(
                    topBar = { TopAppBar(title = { Text("Web2Pdf Converter") }) },
                    modifier = Modifier.fillMaxSize()
                ) { innerPadding ->
                    Box(
                        Modifier
                            .fillMaxSize()
                            .padding(innerPadding), contentAlignment = Alignment.Center
                    ) {
                        Row {
                            Button(onClick = {
                                cvt.tryProcessUrl("https://www.google.com", getFile("from-url.pdf"), callback)
                                Log.d("Web2Pdf", "tryProcessUrl: https://www.google.com")
                            }) {
                                Text("Process url")
                            }
                            Spacer(Modifier.width(4.dp))
                            Button(onClick = {
                                cvt.tryProcessHtmlFile(File("//android_asset/test.html"), getFile("from-file.pdf"), callback)
                            }) {
                                Text("Process file")
                            }
                            Spacer(Modifier.width(4.dp))
                            Button(onClick = {
                                cvt.tryProcessData(htmlText, getFile("from-rawtext.pdf"), onFinish = callback)
                            }) {
                                Text("Process raw")
                            }
                        }
                    }
                }
            }
        }
    }
}
